{
    "lines_of_code": 10800,
    "num_classes": 84,
    "num_methods": 484,
    "num_variables": 11,
    "classes": {
      "TestCommand": {
        "PyTest": {
          "methods": [
            "initialize_options",
            "finalize_options",
            "run_tests"
          ],
          "attributes": [
            "user_options"
          ]
        }
      },
      "TestSuperLen": {
        "methods": [
          "test_io_streams",
          "test_super_len_correctly_calculates_len_of_partially_read_file",
          "test_super_len_handles_files_raising_weird_errors_in_tell",
          "test_super_len_tell_ioerror",
          "test_string",
          "test_file",
          "test_tarfile_member",
          "test_super_len_with__len__",
          "test_super_len_with_no__len__",
          "test_super_len_with_tell",
          "test_super_len_with_fileno",
          "test_super_len_with_no_matches"
        ],
        "attributes": []
      },
      "TestToKeyValList": {
        "methods": [
          "test_valid",
          "test_invalid"
        ],
        "attributes": []
      },
      "TestUnquoteHeaderValue": {
        "methods": [
          "test_valid",
          "test_is_filename"
        ],
        "attributes": []
      },
      "TestGetEnvironProxies": {
        "methods": [
          "no_proxy",
          "test_bypass",
          "test_not_bypass",
          "test_bypass_no_proxy_keyword",
          "test_not_bypass_no_proxy_keyword"
        ],
        "attributes": []
      },
      "TestIsIPv4Address": {
        "methods": [
          "test_valid",
          "test_invalid"
        ],
        "attributes": []
      },
      "TestIsValidCIDR": {
        "methods": [
          "test_valid",
          "test_invalid"
        ],
        "attributes": []
      },
      "TestAddressInNetwork": {
        "methods": [
          "test_valid",
          "test_invalid"
        ],
        "attributes": []
      },
      "TestGuessFilename": {
        "methods": [
          "test_guess_filename_invalid",
          "test_guess_filename_valid"
        ],
        "attributes": []
      },
      "TestExtractZippedPaths": {
        "methods": [
          "test_unzipped_paths_unchanged",
          "test_zipped_paths_extracted",
          "test_invalid_unc_path"
        ],
        "attributes": []
      },
      "TestContentEncodingDetection": {
        "methods": [
          "test_none",
          "test_pragmas",
          "test_precedence"
        ],
        "attributes": []
      },
      "TestGuessJSONUTF": {
        "methods": [
          "test_encoded",
          "test_bad_utf_like_encoding",
          "test_guess_by_bom"
        ],
        "attributes": []
      },
      "RegHandle": {
        "methods": [
          "Close"
        ],
        "attributes": []
      },
      "BoomFile": {
        "methods": [
          "__len__",
          "tell"
        ],
        "attributes": []
      },
      "NoLenBoomFile": {
        "methods": [
          "tell",
          "seek"
        ],
        "attributes": []
      },
      "LenFile": {
        "methods": [
          "__init__"
        ],
        "attributes": []
      },
      "TestCaseInsensitiveDict": {
        "methods": [
          "test_init",
          "test_docstring_example",
          "test_len",
          "test_getitem",
          "test_fixes_649",
          "test_delitem",
          "test_contains",
          "test_get",
          "test_update",
          "test_update_retains_unchanged",
          "test_iter",
          "test_equality",
          "test_setdefault",
          "test_lower_items",
          "test_preserve_key_case",
          "test_preserve_last_key_case",
          "test_copy"
        ],
        "attributes": []
      },
      "TestLookupDict": {
        "methods": [
          "setup",
          "test_repr",
          "test_getitem",
          "test_get"
        ],
        "attributes": [
          "get_item_parameters"
        ]
      },
      "TestTestServer": {
        "methods": [
          "test_basic",
          "test_server_closes",
          "test_text_response",
          "test_basic_response",
          "test_basic_waiting_server",
          "test_multiple_requests",
          "test_request_recovery",
          "test_requests_after_timeout_are_not_received",
          "test_request_recovery_with_bigger_timeout",
          "test_server_finishes_on_error",
          "test_server_finishes_when_no_connections"
        ],
        "attributes": []
      },
      "TestRequests": {
        "methods": [
          "test_entry_points",
          "test_invalid_url",
          "test_basic_building",
          "test_no_content_length",
          "test_no_body_content_length",
          "test_empty_content_length",
          "test_override_content_length",
          "test_path_is_not_double_encoded",
          "test_params_are_added_before_fragment",
          "test_params_original_order_is_preserved_by_default",
          "test_params_bytes_are_encoded",
          "test_binary_put",
          "test_whitespaces_are_removed_from_url",
          "test_mixed_case_scheme_acceptable",
          "test_HTTP_200_OK_GET_ALTERNATIVE",
          "test_HTTP_302_ALLOW_REDIRECT_GET",
          "test_HTTP_307_ALLOW_REDIRECT_POST",
          "test_HTTP_307_ALLOW_REDIRECT_POST_WITH_SEEKABLE",
          "test_HTTP_302_TOO_MANY_REDIRECTS",
          "test_HTTP_302_TOO_MANY_REDIRECTS_WITH_PARAMS",
          "test_http_301_changes_post_to_get",
          "test_http_301_doesnt_change_head_to_get",
          "test_http_302_changes_post_to_get",
          "test_http_302_doesnt_change_head_to_get",
          "test_http_303_changes_post_to_get",
          "test_http_303_doesnt_change_head_to_get",
          "test_header_and_body_removal_on_redirect",
          "test_transfer_enc_removal_on_redirect",
          "test_fragment_maintained_on_redirect",
          "test_HTTP_200_OK_GET_WITH_PARAMS",
          "test_HTTP_200_OK_GET_WITH_MIXED_PARAMS",
          "test_set_cookie_on_301",
          "test_cookie_sent_on_redirect",
          "test_cookie_removed_on_expire",
          "test_cookie_quote_wrapped",
          "test_cookie_persists_via_api",
          "test_request_cookie_overrides_session_cookie",
          "test_request_cookies_not_persisted",
          "test_generic_cookiejar_works",
          "test_param_cookiejar_works",
          "test_cookielib_cookiejar_on_redirect",
          "test_requests_in_history_are_not_overridden",
          "test_history_is_always_a_list",
          "test_headers_on_session_with_None_are_not_sent",
          "test_headers_preserve_order",
          "test_user_agent_transfers",
          "test_HTTP_200_OK_HEAD",
          "test_HTTP_200_OK_PUT",
          "test_BASICAUTH_TUPLE_HTTP_200_OK_GET",
          "test_set_basicauth",
          "test_basicauth_encodes_byte_strings",
          "test_errors",
          "test_proxy_error",
          "test_proxy_error_on_bad_url",
          "test_respect_proxy_env_on_send_self_prepared_request",
          "test_respect_proxy_env_on_send_session_prepared_request",
          "test_respect_proxy_env_on_send_with_redirects",
          "test_respect_proxy_env_on_get",
          "test_respect_proxy_env_on_request",
          "test_proxy_authorization_preserved_on_request",
          "test_proxy_authorization_not_appended_to_https_request",
          "test_basicauth_with_netrc",
          "test_DIGEST_HTTP_200_OK_GET",
          "test_DIGEST_AUTH_RETURNS_COOKIE",
          "test_DIGEST_AUTH_SETS_SESSION_COOKIES",
          "test_DIGEST_STREAM",
          "test_DIGESTAUTH_WRONG_HTTP_401_GET",
          "test_DIGESTAUTH_QUOTES_QOP_VALUE",
          "test_POSTBIN_GET_POST_FILES",
          "test_invalid_files_input",
          "test_POSTBIN_SEEKED_OBJECT_WITH_NO_ITER",
          "test_POSTBIN_GET_POST_FILES_WITH_DATA",
          "test_post_with_custom_mapping",
          "test_conflicting_post_params",
          "test_request_ok_set",
          "test_status_raising",
          "test_decompress_gzip",
          "test_unicode_get",
          "test_unicode_header_name",
          "test_pyopenssl_redirect",
          "test_invalid_ca_certificate_path",
          "test_invalid_ssl_certificate_files",
          "test_env_cert_bundles",
          "test_http_with_certificate",
          "test_https_warnings",
          "test_certificate_failure",
          "test_urlencoded_get_query_multivalued_param",
          "test_form_encoded_post_query_multivalued_element",
          "test_different_encodings_dont_break_post",
          "test_unicode_multipart_post",
          "test_unicode_multipart_post_fieldnames",
          "test_unicode_method_name",
          "test_unicode_method_name_with_request_object",
          "test_non_prepared_request_error",
          "test_custom_content_type",
          "test_hook_receives_request_arguments",
          "test_session_hooks_are_used_with_no_request_hooks",
          "test_session_hooks_are_overridden_by_request_hooks",
          "test_prepared_request_hook",
          "test_prepared_from_session",
          "test_prepare_request_with_bytestring_url",
          "test_request_with_bytestring_host",
          "test_links",
          "test_cookie_parameters",
          "test_cookie_as_dict_keeps_len",
          "test_cookie_as_dict_keeps_items",
          "test_cookie_as_dict_keys",
          "test_cookie_as_dict_values",
          "test_cookie_as_dict_items",
          "test_cookie_duplicate_names_different_domains",
          "test_cookie_duplicate_names_raises_cookie_conflict_error",
          "test_cookie_policy_copy",
          "test_time_elapsed_blank",
          "test_empty_response_has_content_none",
          "test_response_is_iterable",
          "test_response_decode_unicode",
          "test_response_reason_unicode",
          "test_response_reason_unicode_fallback",
          "test_response_chunk_size_type",
          "test_iter_content_wraps_exceptions",
          "test_request_and_response_are_pickleable",
          "test_prepared_request_is_pickleable",
          "test_prepared_request_with_file_is_pickleable",
          "test_prepared_request_with_hook_is_pickleable",
          "test_cannot_send_unprepared_requests",
          "test_http_error",
          "test_session_pickling",
          "test_fixes_1329",
          "test_uppercase_scheme_redirect",
          "test_transport_adapter_ordering",
          "test_session_get_adapter_prefix_matching",
          "test_session_get_adapter_prefix_matching_mixed_case",
          "test_session_get_adapter_prefix_matching_is_case_insensitive",
          "test_header_remove_is_case_insensitive",
          "test_params_are_merged_case_sensitive",
          "test_long_authinfo_in_url",
          "test_header_keys_are_native",
          "test_header_validation",
          "test_header_value_not_str",
          "test_header_no_return_chars",
          "test_header_no_leading_space",
          "test_header_with_subclass_types",
          "test_can_send_objects_with_files",
          "test_can_send_file_object_with_non_string_filename",
          "test_autoset_header_values_are_native",
          "test_content_length_for_bytes_data",
          "test_content_length_for_string_data_counts_bytes",
          "test_nonhttp_schemes_dont_check_URLs",
          "test_auth_is_stripped_on_http_downgrade",
          "test_auth_is_retained_for_redirect_on_host",
          "test_should_strip_auth_host_change",
          "test_should_strip_auth_http_downgrade",
          "test_should_strip_auth_https_upgrade",
          "test_should_strip_auth_port_change",
          "test_should_strip_auth_default_port",
          "test_manual_redirect_with_partial_body_read",
          "test_prepare_body_position_non_stream",
          "test_rewind_body",
          "test_rewind_partially_read_body",
          "test_rewind_body_no_seek",
          "test_rewind_body_failed_seek",
          "test_rewind_body_failed_tell",
          "_patch_adapter_gzipped_redirect",
          "test_redirect_with_wrong_gzipped_header",
          "test_basic_auth_str_is_always_native",
          "test_requests_history_is_saved",
          "test_json_param_post_content_type_works",
          "test_json_param_post_should_not_override_data_param",
          "test_response_iter_lines",
          "test_response_context_manager",
          "test_unconsumed_session_response_closes_connection",
          "test_response_iter_lines_reentrant",
          "test_session_close_proxy_clear",
          "test_proxy_auth",
          "test_proxy_auth_empty_pass",
          "test_response_json_when_content_is_None",
          "test_response_without_release_conn",
          "test_empty_stream_with_auth_does_not_set_content_length_header",
          "test_stream_with_auth_does_not_set_transfer_encoding_header",
          "test_chunked_upload_does_not_set_content_length_header",
          "test_custom_redirect_mixin"
        ],
        "attributes": [
          "digest_auth_algo"
        ]
      },
      "TestMorselToCookieExpires": {
        "methods": [
          "test_expires_valid_str",
          "test_expires_invalid_int",
          "test_expires_none"
        ],
        "attributes": []
      },
      "TestMorselToCookieMaxAge": {
        "methods": [
          "test_max_age_valid_int",
          "test_max_age_invalid_str"
        ],
        "attributes": []
      },
      "TestTimeout": {
        "methods": [
          "test_stream_timeout",
          "test_invalid_timeout",
          "test_none_timeout",
          "test_read_timeout",
          "test_connect_timeout",
          "test_total_timeout_connect",
          "test_encoded_methods"
        ],
        "attributes": []
      },
      "SessionRedirectMixin": {
        "methods": [
          "get_redirect_target",
          "should_strip_auth",
          "resolve_redirects",
          "rebuild_auth",
          "rebuild_proxies",
          "rebuild_method"
        ],
        "attributes": [],
        "Session": {
          "methods": [
            "__init__",
            "__enter__",
            "__exit__",
            "prepare_request",
            "request",
            "get",
            "options",
            "head",
            "post",
            "put",
            "patch",
            "delete",
            "send",
            "merge_environment_settings",
            "get_adapter",
            "close",
            "mount",
            "__getstate__",
            "__setstate__"
          ],
          "attributes": [
            "__attrs__"
          ]
        }
      },
      "TestPreparingURLs": {
        "methods": [
          "test_preparing_url",
          "test_preparing_bad_url",
          "test_redirecting_to_bad_url",
          "test_url_mutation",
          "test_parameters_for_nonstandard_schemes",
          "test_post_json_nan",
          "test_json_decode_compatibility",
          "test_json_decode_persists_doc_attr",
          "test_status_code_425"
        ],
        "attributes": []
      },
      "TestStream": {
        "methods": [
          "__init__",
          "__len__",
          "read",
          "tell",
          "seek"
        ],
        "attributes": []
      },
      "MutableMapping": {
        "CustomMapping": {
          "methods": [
            "__init__",
            "__delitem__",
            "__getitem__",
            "__setitem__",
            "__iter__",
            "__len__"
          ],
          "attributes": []
        },
        "RequestsCookieJar": {
          "methods": [
            "get",
            "set",
            "iterkeys",
            "keys",
            "itervalues",
            "values",
            "iteritems",
            "items",
            "list_domains",
            "list_paths",
            "multiple_domains",
            "get_dict",
            "__contains__",
            "__getitem__",
            "__setitem__",
            "__delitem__",
            "set_cookie",
            "update",
            "_find",
            "_find_no_duplicates",
            "__getstate__",
            "__setstate__",
            "copy",
            "get_policy"
          ],
          "attributes": []
        },
        "CaseInsensitiveDict": {
          "methods": [
            "__init__",
            "__setitem__",
            "__getitem__",
            "__delitem__",
            "__iter__",
            "__len__",
            "lower_items",
            "__eq__",
            "copy",
            "__repr__"
          ],
          "attributes": []
        }
      },
      "DummyAuth": {
        "methods": [
          "__call__"
        ],
        "attributes": []
      },
      "MyCookiePolicy": {
        "methods": [],
        "attributes": []
      },
      "str": {
        "MyString": {
          "methods": [],
          "attributes": []
        }
      },
      "bytes": {
        "MyBytes": {
          "methods": [],
          "attributes": []
        }
      },
      "BadFileObj": {
        "methods": [
          "__init__",
          "tell",
          "__iter__"
        ],
        "attributes": []
      },
      "CustomRedirectSession": {
        "methods": [
          "get_redirect_target"
        ],
        "attributes": []
      },
      "VersionedPackage": {
        "methods": [
          "__init__"
        ],
        "attributes": []
      },
      "Server": {
        "methods": [
          "__init__",
          "text_response_server",
          "basic_response_server",
          "run",
          "_create_socket_and_bind",
          "_close_server_sock_ignore_errors",
          "_handle_requests",
          "_accept_connection",
          "__enter__",
          "__exit__"
        ],
        "attributes": [
          "WAIT_EVENT_TIMEOUT"
        ]
      },
      "Style": {
        "FlaskyStyle": {
          "methods": [],
          "attributes": [
            "background_color",
            "default_style",
            "styles"
          ]
        }
      },
      "MockRequest": {
        "methods": [
          "__init__",
          "get_type",
          "get_host",
          "get_origin_req_host",
          "get_full_url",
          "is_unverifiable",
          "has_header",
          "get_header",
          "add_header",
          "add_unredirected_header",
          "get_new_headers",
          "unverifiable",
          "origin_req_host",
          "host"
        ],
        "attributes": []
      },
      "MockResponse": {
        "methods": [
          "__init__",
          "info",
          "getheaders"
        ],
        "attributes": []
      },
      "RuntimeError": {
        "CookieConflictError": {
          "methods": [],
          "attributes": []
        }
      },
      "AuthBase": {
        "methods": [
          "__call__"
        ],
        "attributes": [],
        "HTTPBasicAuth": {
          "methods": [
            "__init__",
            "__eq__",
            "__ne__",
            "__call__"
          ],
          "attributes": []
        },
        "HTTPDigestAuth": {
          "methods": [
            "__init__",
            "init_per_thread_state",
            "build_digest_header",
            "handle_redirect",
            "handle_401",
            "__call__",
            "__eq__",
            "__ne__"
          ],
          "attributes": []
        }
      },
      "HTTPBasicAuth": {
        "HTTPProxyAuth": {
          "methods": [
            "__call__"
          ],
          "attributes": []
        }
      },
      "RequestEncodingMixin": {
        "methods": [
          "path_url",
          "_encode_params",
          "_encode_files"
        ],
        "attributes": [],
        "PreparedRequest": {
          "methods": [
            "__init__",
            "prepare",
            "__repr__",
            "copy",
            "prepare_method",
            "_get_idna_encoded_host",
            "prepare_url",
            "prepare_headers",
            "prepare_body",
            "prepare_content_length",
            "prepare_auth",
            "prepare_cookies",
            "prepare_hooks"
          ],
          "attributes": []
        }
      },
      "RequestHooksMixin": {
        "methods": [
          "register_hook",
          "deregister_hook"
        ],
        "attributes": [],
        "Request": {
          "methods": [
            "__init__",
            "__repr__",
            "prepare"
          ],
          "attributes": []
        }
      },
      "Response": {
        "methods": [
          "__init__",
          "__enter__",
          "__exit__",
          "__getstate__",
          "__setstate__",
          "__repr__",
          "__bool__",
          "__nonzero__",
          "__iter__",
          "ok",
          "is_redirect",
          "is_permanent_redirect",
          "next",
          "apparent_encoding",
          "iter_content",
          "iter_lines",
          "content",
          "text",
          "json",
          "links",
          "raise_for_status",
          "close"
        ],
        "attributes": [
          "__attrs__"
        ]
      },
      "IOError": {
        "RequestException": {
          "methods": [
            "__init__"
          ],
          "attributes": []
        }
      },
      "RequestException": {
        "InvalidJSONError": {
          "methods": [],
          "attributes": []
        },
        "HTTPError": {
          "methods": [],
          "attributes": []
        },
        "ConnectionError": {
          "methods": [],
          "attributes": []
        },
        "Timeout": {
          "methods": [],
          "attributes": []
        },
        "URLRequired": {
          "methods": [],
          "attributes": []
        },
        "TooManyRedirects": {
          "methods": [],
          "attributes": []
        },
        "MissingSchema": {
          "methods": [],
          "attributes": []
        },
        "InvalidSchema": {
          "methods": [],
          "attributes": []
        },
        "InvalidURL": {
          "methods": [],
          "attributes": []
        },
        "InvalidHeader": {
          "methods": [],
          "attributes": []
        },
        "ChunkedEncodingError": {
          "methods": [],
          "attributes": []
        },
        "ContentDecodingError": {
          "methods": [],
          "attributes": []
        },
        "StreamConsumedError": {
          "methods": [],
          "attributes": []
        },
        "RetryError": {
          "methods": [],
          "attributes": []
        },
        "UnrewindableBodyError": {
          "methods": [],
          "attributes": []
        }
      },
      "InvalidJSONError": {
        "JSONDecodeError": {
          "methods": [
            "__init__",
            "__reduce__"
          ],
          "attributes": []
        }
      },
      "ConnectionError": {
        "ProxyError": {
          "methods": [],
          "attributes": []
        },
        "SSLError": {
          "methods": [],
          "attributes": []
        },
        "ConnectTimeout": {
          "methods": [],
          "attributes": []
        }
      },
      "Timeout": {
        "ReadTimeout": {
          "methods": [],
          "attributes": []
        }
      },
      "InvalidURL": {
        "InvalidProxyURL": {
          "methods": [],
          "attributes": []
        }
      },
      "Warning": {
        "RequestsWarning": {
          "methods": [],
          "attributes": []
        }
      },
      "RequestsWarning": {
        "FileModeWarning": {
          "methods": [],
          "attributes": []
        },
        "RequestsDependencyWarning": {
          "methods": [],
          "attributes": []
        }
      },
      "dict": {
        "LookupDict": {
          "methods": [
            "__init__",
            "__repr__",
            "__getitem__",
            "get"
          ],
          "attributes": []
        }
      },
      "BaseAdapter": {
        "methods": [
          "__init__",
          "send",
          "close"
        ],
        "attributes": [],
        "HTTPAdapter": {
          "methods": [
            "__init__",
            "__getstate__",
            "__setstate__",
            "init_poolmanager",
            "proxy_manager_for",
            "cert_verify",
            "build_response",
            "get_connection",
            "close",
            "request_url",
            "add_headers",
            "proxy_headers",
            "send"
          ],
          "attributes": [
            "__attrs__"
          ]
        }
      }
    }
}